//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace View.Service.DAO.PharmacyTool.ユーザー管理 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateNewUser結果", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.DAO.PharmacyTool" +
        ".%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E7%AE%A1%E7%90%86")]
    public partial class CreateNewUser結果 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string エラーメッセージField;
        
        private bool ユーザー作成成功かどうかField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string エラーメッセージ {
            get {
                return this.エラーメッセージField;
            }
            set {
                if ((object.ReferenceEquals(this.エラーメッセージField, value) != true)) {
                    this.エラーメッセージField = value;
                    this.RaisePropertyChanged("エラーメッセージ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ユーザー作成成功かどうか {
            get {
                return this.ユーザー作成成功かどうかField;
            }
            set {
                if ((this.ユーザー作成成功かどうかField.Equals(value) != true)) {
                    this.ユーザー作成成功かどうかField = value;
                    this.RaisePropertyChanged("ユーザー作成成功かどうか");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteUser結果", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.DAO.PharmacyTool" +
        ".%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E7%AE%A1%E7%90%86")]
    public partial class DeleteUser結果 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string エラーメッセージField;
        
        private bool ユーザー削除成功かどうかField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string エラーメッセージ {
            get {
                return this.エラーメッセージField;
            }
            set {
                if ((object.ReferenceEquals(this.エラーメッセージField, value) != true)) {
                    this.エラーメッセージField = value;
                    this.RaisePropertyChanged("エラーメッセージ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ユーザー削除成功かどうか {
            get {
                return this.ユーザー削除成功かどうかField;
            }
            set {
                if ((this.ユーザー削除成功かどうかField.Equals(value) != true)) {
                    this.ユーザー削除成功かどうかField = value;
                    this.RaisePropertyChanged("ユーザー削除成功かどうか");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllUser情報取得結果", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.DAO.PharmacyTool" +
        ".%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E7%AE%A1%E7%90%86")]
    public partial class AllUser情報取得結果 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PasswordField;
        
        private string UserIDField;
        
        private int アクセス権限Field;
        
        private bool 削除フラグField;
        
        private string 変更前のUserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int アクセス権限 {
            get {
                return this.アクセス権限Field;
            }
            set {
                if ((this.アクセス権限Field.Equals(value) != true)) {
                    this.アクセス権限Field = value;
                    this.RaisePropertyChanged("アクセス権限");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool 削除フラグ {
            get {
                return this.削除フラグField;
            }
            set {
                if ((this.削除フラグField.Equals(value) != true)) {
                    this.削除フラグField = value;
                    this.RaisePropertyChanged("削除フラグ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 変更前のUserID {
            get {
                return this.変更前のUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.変更前のUserIDField, value) != true)) {
                    this.変更前のUserIDField = value;
                    this.RaisePropertyChanged("変更前のUserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.DAO.PharmacyTool.ユーザー管理.IUserManagement")]
    public interface IUserManagement {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserManagement/CreateNewUser実行", ReplyAction="http://tempuri.org/IUserManagement/CreateNewUser実行Response")]
        System.IAsyncResult BeginCreateNewUser実行(string UserID, string Confidential, int アクセス権限, System.AsyncCallback callback, object asyncState);
        
        View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果 EndCreateNewUser実行(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserManagement/DeleteUser実行", ReplyAction="http://tempuri.org/IUserManagement/DeleteUser実行Response")]
        System.IAsyncResult BeginDeleteUser実行(string UserID, System.AsyncCallback callback, object asyncState);
        
        View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果 EndDeleteUser実行(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserManagement/AllUser情報取得実行", ReplyAction="http://tempuri.org/IUserManagement/AllUser情報取得実行Response")]
        System.IAsyncResult BeginAllUser情報取得実行(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> EndAllUser情報取得実行(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserManagement/AllUser情報更新実行", ReplyAction="http://tempuri.org/IUserManagement/AllUser情報更新実行Response")]
        System.IAsyncResult BeginAllUser情報更新実行(System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> list, System.AsyncCallback callback, object asyncState);
        
        string EndAllUser情報更新実行(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserManagement/LoginUser情報更新実行", ReplyAction="http://tempuri.org/IUserManagement/LoginUser情報更新実行Response")]
        System.IAsyncResult BeginLoginUser情報更新実行(View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果 lu, System.AsyncCallback callback, object asyncState);
        
        string EndLoginUser情報更新実行(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementChannel : View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateNewUser実行CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateNewUser実行CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUser実行CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUser実行CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AllUser情報取得実行CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllUser情報取得実行CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AllUser情報更新実行CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllUser情報更新実行CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginUser情報更新実行CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginUser情報更新実行CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementClient : System.ServiceModel.ClientBase<View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement>, View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement {
        
        private BeginOperationDelegate onBeginCreateNewUser実行Delegate;
        
        private EndOperationDelegate onEndCreateNewUser実行Delegate;
        
        private System.Threading.SendOrPostCallback onCreateNewUser実行CompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUser実行Delegate;
        
        private EndOperationDelegate onEndDeleteUser実行Delegate;
        
        private System.Threading.SendOrPostCallback onDeleteUser実行CompletedDelegate;
        
        private BeginOperationDelegate onBeginAllUser情報取得実行Delegate;
        
        private EndOperationDelegate onEndAllUser情報取得実行Delegate;
        
        private System.Threading.SendOrPostCallback onAllUser情報取得実行CompletedDelegate;
        
        private BeginOperationDelegate onBeginAllUser情報更新実行Delegate;
        
        private EndOperationDelegate onEndAllUser情報更新実行Delegate;
        
        private System.Threading.SendOrPostCallback onAllUser情報更新実行CompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginUser情報更新実行Delegate;
        
        private EndOperationDelegate onEndLoginUser情報更新実行Delegate;
        
        private System.Threading.SendOrPostCallback onLoginUser情報更新実行CompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserManagementClient() {
        }
        
        public UserManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("CookieContainer を設定できません。バインドに HttpCookieContainerBindingElement が含まれていることを確認してくだ" +
                            "さい。");
                }
            }
        }
        
        public event System.EventHandler<CreateNewUser実行CompletedEventArgs> CreateNewUser実行Completed;
        
        public event System.EventHandler<DeleteUser実行CompletedEventArgs> DeleteUser実行Completed;
        
        public event System.EventHandler<AllUser情報取得実行CompletedEventArgs> AllUser情報取得実行Completed;
        
        public event System.EventHandler<AllUser情報更新実行CompletedEventArgs> AllUser情報更新実行Completed;
        
        public event System.EventHandler<LoginUser情報更新実行CompletedEventArgs> LoginUser情報更新実行Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.BeginCreateNewUser実行(string UserID, string Confidential, int アクセス権限, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNewUser実行(UserID, Confidential, アクセス権限, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果 View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.EndCreateNewUser実行(System.IAsyncResult result) {
            return base.Channel.EndCreateNewUser実行(result);
        }
        
        private System.IAsyncResult OnBeginCreateNewUser実行(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserID = ((string)(inValues[0]));
            string Confidential = ((string)(inValues[1]));
            int アクセス権限 = ((int)(inValues[2]));
            return ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).BeginCreateNewUser実行(UserID, Confidential, アクセス権限, callback, asyncState);
        }
        
        private object[] OnEndCreateNewUser実行(System.IAsyncResult result) {
            View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果 retVal = ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).EndCreateNewUser実行(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateNewUser実行Completed(object state) {
            if ((this.CreateNewUser実行Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNewUser実行Completed(this, new CreateNewUser実行CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNewUser実行Async(string UserID, string Confidential, int アクセス権限) {
            this.CreateNewUser実行Async(UserID, Confidential, アクセス権限, null);
        }
        
        public void CreateNewUser実行Async(string UserID, string Confidential, int アクセス権限, object userState) {
            if ((this.onBeginCreateNewUser実行Delegate == null)) {
                this.onBeginCreateNewUser実行Delegate = new BeginOperationDelegate(this.OnBeginCreateNewUser実行);
            }
            if ((this.onEndCreateNewUser実行Delegate == null)) {
                this.onEndCreateNewUser実行Delegate = new EndOperationDelegate(this.OnEndCreateNewUser実行);
            }
            if ((this.onCreateNewUser実行CompletedDelegate == null)) {
                this.onCreateNewUser実行CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewUser実行Completed);
            }
            base.InvokeAsync(this.onBeginCreateNewUser実行Delegate, new object[] {
                        UserID,
                        Confidential,
                        アクセス権限}, this.onEndCreateNewUser実行Delegate, this.onCreateNewUser実行CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.BeginDeleteUser実行(string UserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser実行(UserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果 View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.EndDeleteUser実行(System.IAsyncResult result) {
            return base.Channel.EndDeleteUser実行(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser実行(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string UserID = ((string)(inValues[0]));
            return ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).BeginDeleteUser実行(UserID, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser実行(System.IAsyncResult result) {
            View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果 retVal = ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).EndDeleteUser実行(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUser実行Completed(object state) {
            if ((this.DeleteUser実行Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUser実行Completed(this, new DeleteUser実行CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUser実行Async(string UserID) {
            this.DeleteUser実行Async(UserID, null);
        }
        
        public void DeleteUser実行Async(string UserID, object userState) {
            if ((this.onBeginDeleteUser実行Delegate == null)) {
                this.onBeginDeleteUser実行Delegate = new BeginOperationDelegate(this.OnBeginDeleteUser実行);
            }
            if ((this.onEndDeleteUser実行Delegate == null)) {
                this.onEndDeleteUser実行Delegate = new EndOperationDelegate(this.OnEndDeleteUser実行);
            }
            if ((this.onDeleteUser実行CompletedDelegate == null)) {
                this.onDeleteUser実行CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUser実行Completed);
            }
            base.InvokeAsync(this.onBeginDeleteUser実行Delegate, new object[] {
                        UserID}, this.onEndDeleteUser実行Delegate, this.onDeleteUser実行CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.BeginAllUser情報取得実行(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllUser情報取得実行(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.EndAllUser情報取得実行(System.IAsyncResult result) {
            return base.Channel.EndAllUser情報取得実行(result);
        }
        
        private System.IAsyncResult OnBeginAllUser情報取得実行(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).BeginAllUser情報取得実行(callback, asyncState);
        }
        
        private object[] OnEndAllUser情報取得実行(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> retVal = ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).EndAllUser情報取得実行(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllUser情報取得実行Completed(object state) {
            if ((this.AllUser情報取得実行Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllUser情報取得実行Completed(this, new AllUser情報取得実行CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllUser情報取得実行Async() {
            this.AllUser情報取得実行Async(null);
        }
        
        public void AllUser情報取得実行Async(object userState) {
            if ((this.onBeginAllUser情報取得実行Delegate == null)) {
                this.onBeginAllUser情報取得実行Delegate = new BeginOperationDelegate(this.OnBeginAllUser情報取得実行);
            }
            if ((this.onEndAllUser情報取得実行Delegate == null)) {
                this.onEndAllUser情報取得実行Delegate = new EndOperationDelegate(this.OnEndAllUser情報取得実行);
            }
            if ((this.onAllUser情報取得実行CompletedDelegate == null)) {
                this.onAllUser情報取得実行CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllUser情報取得実行Completed);
            }
            base.InvokeAsync(this.onBeginAllUser情報取得実行Delegate, null, this.onEndAllUser情報取得実行Delegate, this.onAllUser情報取得実行CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.BeginAllUser情報更新実行(System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> list, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllUser情報更新実行(list, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.EndAllUser情報更新実行(System.IAsyncResult result) {
            return base.Channel.EndAllUser情報更新実行(result);
        }
        
        private System.IAsyncResult OnBeginAllUser情報更新実行(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> list = ((System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果>)(inValues[0]));
            return ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).BeginAllUser情報更新実行(list, callback, asyncState);
        }
        
        private object[] OnEndAllUser情報更新実行(System.IAsyncResult result) {
            string retVal = ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).EndAllUser情報更新実行(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllUser情報更新実行Completed(object state) {
            if ((this.AllUser情報更新実行Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllUser情報更新実行Completed(this, new AllUser情報更新実行CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllUser情報更新実行Async(System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> list) {
            this.AllUser情報更新実行Async(list, null);
        }
        
        public void AllUser情報更新実行Async(System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> list, object userState) {
            if ((this.onBeginAllUser情報更新実行Delegate == null)) {
                this.onBeginAllUser情報更新実行Delegate = new BeginOperationDelegate(this.OnBeginAllUser情報更新実行);
            }
            if ((this.onEndAllUser情報更新実行Delegate == null)) {
                this.onEndAllUser情報更新実行Delegate = new EndOperationDelegate(this.OnEndAllUser情報更新実行);
            }
            if ((this.onAllUser情報更新実行CompletedDelegate == null)) {
                this.onAllUser情報更新実行CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllUser情報更新実行Completed);
            }
            base.InvokeAsync(this.onBeginAllUser情報更新実行Delegate, new object[] {
                        list}, this.onEndAllUser情報更新実行Delegate, this.onAllUser情報更新実行CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.BeginLoginUser情報更新実行(View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果 lu, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginUser情報更新実行(lu, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement.EndLoginUser情報更新実行(System.IAsyncResult result) {
            return base.Channel.EndLoginUser情報更新実行(result);
        }
        
        private System.IAsyncResult OnBeginLoginUser情報更新実行(object[] inValues, System.AsyncCallback callback, object asyncState) {
            View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果 lu = ((View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果)(inValues[0]));
            return ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).BeginLoginUser情報更新実行(lu, callback, asyncState);
        }
        
        private object[] OnEndLoginUser情報更新実行(System.IAsyncResult result) {
            string retVal = ((View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement)(this)).EndLoginUser情報更新実行(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginUser情報更新実行Completed(object state) {
            if ((this.LoginUser情報更新実行Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginUser情報更新実行Completed(this, new LoginUser情報更新実行CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginUser情報更新実行Async(View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果 lu) {
            this.LoginUser情報更新実行Async(lu, null);
        }
        
        public void LoginUser情報更新実行Async(View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果 lu, object userState) {
            if ((this.onBeginLoginUser情報更新実行Delegate == null)) {
                this.onBeginLoginUser情報更新実行Delegate = new BeginOperationDelegate(this.OnBeginLoginUser情報更新実行);
            }
            if ((this.onEndLoginUser情報更新実行Delegate == null)) {
                this.onEndLoginUser情報更新実行Delegate = new EndOperationDelegate(this.OnEndLoginUser情報更新実行);
            }
            if ((this.onLoginUser情報更新実行CompletedDelegate == null)) {
                this.onLoginUser情報更新実行CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginUser情報更新実行Completed);
            }
            base.InvokeAsync(this.onBeginLoginUser情報更新実行Delegate, new object[] {
                        lu}, this.onEndLoginUser情報更新実行Delegate, this.onLoginUser情報更新実行CompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement CreateChannel() {
            return new UserManagementClientChannel(this);
        }
        
        private class UserManagementClientChannel : ChannelBase<View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement>, View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement {
            
            public UserManagementClientChannel(System.ServiceModel.ClientBase<View.Service.DAO.PharmacyTool.ユーザー管理.IUserManagement> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCreateNewUser実行(string UserID, string Confidential, int アクセス権限, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = UserID;
                _args[1] = Confidential;
                _args[2] = アクセス権限;
                System.IAsyncResult _result = base.BeginInvoke("CreateNewUser実行", _args, callback, asyncState);
                return _result;
            }
            
            public View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果 EndCreateNewUser実行(System.IAsyncResult result) {
                object[] _args = new object[0];
                View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果 _result = ((View.Service.DAO.PharmacyTool.ユーザー管理.CreateNewUser結果)(base.EndInvoke("CreateNewUser実行", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUser実行(string UserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUser実行", _args, callback, asyncState);
                return _result;
            }
            
            public View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果 EndDeleteUser実行(System.IAsyncResult result) {
                object[] _args = new object[0];
                View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果 _result = ((View.Service.DAO.PharmacyTool.ユーザー管理.DeleteUser結果)(base.EndInvoke("DeleteUser実行", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAllUser情報取得実行(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("AllUser情報取得実行", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> EndAllUser情報取得実行(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> _result = ((System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果>)(base.EndInvoke("AllUser情報取得実行", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAllUser情報更新実行(System.Collections.ObjectModel.ObservableCollection<View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果> list, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = list;
                System.IAsyncResult _result = base.BeginInvoke("AllUser情報更新実行", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAllUser情報更新実行(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AllUser情報更新実行", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoginUser情報更新実行(View.Service.DAO.PharmacyTool.ユーザー管理.AllUser情報取得結果 lu, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lu;
                System.IAsyncResult _result = base.BeginInvoke("LoginUser情報更新実行", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLoginUser情報更新実行(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("LoginUser情報更新実行", _args, result)));
                return _result;
            }
        }
    }
}
