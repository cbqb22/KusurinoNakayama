//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PharmacyToolMobile.Service.DAO.PharmacyTool {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ログインチェック結果", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.DAO.PharmacyTool" +
        "")]
    [System.SerializableAttribute()]
    public partial class ログインチェック結果 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int アクセス権限Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string エラーメッセージField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool チェック成功かField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ユーザーIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 表示名称Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int アクセス権限 {
            get {
                return this.アクセス権限Field;
            }
            set {
                if ((this.アクセス権限Field.Equals(value) != true)) {
                    this.アクセス権限Field = value;
                    this.RaisePropertyChanged("アクセス権限");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string エラーメッセージ {
            get {
                return this.エラーメッセージField;
            }
            set {
                if ((object.ReferenceEquals(this.エラーメッセージField, value) != true)) {
                    this.エラーメッセージField = value;
                    this.RaisePropertyChanged("エラーメッセージ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool チェック成功か {
            get {
                return this.チェック成功かField;
            }
            set {
                if ((this.チェック成功かField.Equals(value) != true)) {
                    this.チェック成功かField = value;
                    this.RaisePropertyChanged("チェック成功か");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ユーザーID {
            get {
                return this.ユーザーIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ユーザーIDField, value) != true)) {
                    this.ユーザーIDField = value;
                    this.RaisePropertyChanged("ユーザーID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 表示名称 {
            get {
                return this.表示名称Field;
            }
            set {
                if ((object.ReferenceEquals(this.表示名称Field, value) != true)) {
                    this.表示名称Field = value;
                    this.RaisePropertyChanged("表示名称");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.DAO.PharmacyTool.ILoginCheck")]
    public interface ILoginCheck {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginCheck/LoginCheck実行", ReplyAction="http://tempuri.org/ILoginCheck/LoginCheck実行Response")]
        PharmacyToolMobile.Service.DAO.PharmacyTool.ログインチェック結果[] LoginCheck実行(string 入力ユーザーID, string 入力コンフィデンシャル);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginCheckChannel : PharmacyToolMobile.Service.DAO.PharmacyTool.ILoginCheck, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCheckClient : System.ServiceModel.ClientBase<PharmacyToolMobile.Service.DAO.PharmacyTool.ILoginCheck>, PharmacyToolMobile.Service.DAO.PharmacyTool.ILoginCheck {
        
        public LoginCheckClient() {
        }
        
        public LoginCheckClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginCheckClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginCheckClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginCheckClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PharmacyToolMobile.Service.DAO.PharmacyTool.ログインチェック結果[] LoginCheck実行(string 入力ユーザーID, string 入力コンフィデンシャル) {
            return base.Channel.LoginCheck実行(入力ユーザーID, 入力コンフィデンシャル);
        }
    }
}
