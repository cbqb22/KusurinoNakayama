//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34209
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PharmacyToolMobile.Service.File.Writer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ディレクトリ操作モード", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    public enum ディレクトリ操作モード : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Create = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rename = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="タイプ", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    public enum タイプ : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ディレクトリ = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ファイル = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="掲示板書込タイプ", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    public enum 掲示板書込タイプ : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        新規投稿 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        記事修正 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        返信投稿 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="文字色", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    public enum 文字色 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        赤 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        茶色 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        緑 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        青 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        紫 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ピンク = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        オレンジ = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        黒 = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="掲示板結果リターンEntity", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    [System.SerializableAttribute()]
    public partial class 掲示板結果リターンEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string エラーメッセージField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 書込みカテゴリField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string 書込み記事NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool 書込成功かField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string エラーメッセージ {
            get {
                return this.エラーメッセージField;
            }
            set {
                if ((object.ReferenceEquals(this.エラーメッセージField, value) != true)) {
                    this.エラーメッセージField = value;
                    this.RaisePropertyChanged("エラーメッセージ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 書込みカテゴリ {
            get {
                return this.書込みカテゴリField;
            }
            set {
                if ((object.ReferenceEquals(this.書込みカテゴリField, value) != true)) {
                    this.書込みカテゴリField = value;
                    this.RaisePropertyChanged("書込みカテゴリ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string 書込み記事No {
            get {
                return this.書込み記事NoField;
            }
            set {
                if ((object.ReferenceEquals(this.書込み記事NoField, value) != true)) {
                    this.書込み記事NoField = value;
                    this.RaisePropertyChanged("書込み記事No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool 書込成功か {
            get {
                return this.書込成功かField;
            }
            set {
                if ((this.書込成功かField.Equals(value) != true)) {
                    this.書込成功かField = value;
                    this.RaisePropertyChanged("書込成功か");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="画像種類Enum", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    public enum 画像種類Enum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        画像なし = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        home = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        book1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        kinds1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        folder2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cross = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        exclame = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="スレッド操作タイプ", Namespace="http://schemas.datacontract.org/2004/07/PharmacyTool.Web.Service.File.Writer")]
    public enum スレッド操作タイプ : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        新規 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        修正 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        削除 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.File.Writer.IFileWriter")]
    public interface IFileWriter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileWriter/FileWriter実行", ReplyAction="http://tempuri.org/IFileWriter/FileWriter実行Response")]
        string FileWriter実行(string SendPath, PharmacyToolMobile.Service.File.Writer.ディレクトリ操作モード mode, PharmacyToolMobile.Service.File.Writer.タイプ type, string NewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileWriter/掲示板データ書込", ReplyAction="http://tempuri.org/IFileWriter/掲示板データ書込Response")]
        PharmacyToolMobile.Service.File.Writer.掲示板結果リターンEntity 掲示板データ書込(string カテゴリ名, string タイトル, string 投稿者, string 記事, PharmacyToolMobile.Service.File.Writer.掲示板書込タイプ タイプ, string 記事No, string HomepageUrl, string Email, string[] 添付画像パスリスト, string 暗証キー, PharmacyToolMobile.Service.File.Writer.文字色 文字色);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileWriter/掲示板データ削除", ReplyAction="http://tempuri.org/IFileWriter/掲示板データ削除Response")]
        string 掲示板データ削除(string カテゴリ名, string 記事No, string 暗証キー, bool 管理者か);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileWriter/WriteThreadTitles", ReplyAction="http://tempuri.org/IFileWriter/WriteThreadTitlesResponse")]
        string WriteThreadTitles(string InputThreadName, PharmacyToolMobile.Service.File.Writer.画像種類Enum 画像種類, PharmacyToolMobile.Service.File.Writer.スレッド操作タイプ 操作タイプ, string SourceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileWriter/テロップ変更実行", ReplyAction="http://tempuri.org/IFileWriter/テロップ変更実行Response")]
        string テロップ変更実行(string テロップ記事);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileWriterChannel : PharmacyToolMobile.Service.File.Writer.IFileWriter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileWriterClient : System.ServiceModel.ClientBase<PharmacyToolMobile.Service.File.Writer.IFileWriter>, PharmacyToolMobile.Service.File.Writer.IFileWriter {
        
        public FileWriterClient() {
        }
        
        public FileWriterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileWriterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileWriterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileWriterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string FileWriter実行(string SendPath, PharmacyToolMobile.Service.File.Writer.ディレクトリ操作モード mode, PharmacyToolMobile.Service.File.Writer.タイプ type, string NewName) {
            return base.Channel.FileWriter実行(SendPath, mode, type, NewName);
        }
        
        public PharmacyToolMobile.Service.File.Writer.掲示板結果リターンEntity 掲示板データ書込(string カテゴリ名, string タイトル, string 投稿者, string 記事, PharmacyToolMobile.Service.File.Writer.掲示板書込タイプ タイプ, string 記事No, string HomepageUrl, string Email, string[] 添付画像パスリスト, string 暗証キー, PharmacyToolMobile.Service.File.Writer.文字色 文字色) {
            return base.Channel.掲示板データ書込(カテゴリ名, タイトル, 投稿者, 記事, タイプ, 記事No, HomepageUrl, Email, 添付画像パスリスト, 暗証キー, 文字色);
        }
        
        public string 掲示板データ削除(string カテゴリ名, string 記事No, string 暗証キー, bool 管理者か) {
            return base.Channel.掲示板データ削除(カテゴリ名, 記事No, 暗証キー, 管理者か);
        }
        
        public string WriteThreadTitles(string InputThreadName, PharmacyToolMobile.Service.File.Writer.画像種類Enum 画像種類, PharmacyToolMobile.Service.File.Writer.スレッド操作タイプ 操作タイプ, string SourceName) {
            return base.Channel.WriteThreadTitles(InputThreadName, 画像種類, 操作タイプ, SourceName);
        }
        
        public string テロップ変更実行(string テロップ記事) {
            return base.Channel.テロップ変更実行(テロップ記事);
        }
    }
}
